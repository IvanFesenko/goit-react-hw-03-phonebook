{"version":3,"sources":["components/Filter/Filter.module.css","App.module.css","components/ContactList/ContactList.module.scss","components/Contacts/Contacts.js","components/ContactForm/ContactForm.js","components/ContactList/DeleteButton.js","components/ContactList/ContactListItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","Contacts","children","ContactForm","props","state","name","number","handleChange","bind","handleSubmit","event","type","this","setState","target","value","preventDefault","onAddContact","onSubmit","className","s","form","htmlFor","required","id","formName","placeholder","onChange","formNumber","btn","Component","DeleteButton","handler","onClick","ContactListItem","info","onDeleteHandler","item","wrap","phone","ContactList","contacts","length","list","map","Filter","filter","onChangeFilter","styles","container","input","e","App","addContact","filteredList","DBContacts","localStorage","getItem","JSON","parse","prevProps","prevState","setItem","stringify","newName","findIndex","toLowerCase","trim","nameAvailable","newContact","uid","concat","sort","a","b","alert","i","includes","defaultProps","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gIACAA,EAAOC,QAAU,CAAC,UAAY,0BAA0B,MAAQ,wB,mBCAhED,EAAOC,QAAU,CAAC,UAAY,yB,kBCA9BD,EAAOC,QAAU,CAAC,KAAO,0BAA0B,MAAQ,2BAA2B,KAAO,0BAA0B,KAAO,0BAA0B,MAAQ,2BAA2B,KAAO,0BAA0B,IAAM,2B,0LCQnNC,MATf,YAAiC,IAAbC,EAAY,EAAZA,SAClB,OACE,gCACE,0CACCA,M,uBC4DQC,E,kDA3Db,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,KAAM,GACNC,OAAQ,IAEV,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBAPH,E,yDAUNE,EAAOC,GAClBC,KAAKC,SAAL,eACGF,EAAOD,EAAMI,OAAOC,U,mCAIZL,GACXA,EAAMM,iBADY,MAEOJ,KAAKR,MAAtBC,EAFU,EAEVA,KAAMC,EAFI,EAEJA,OACdM,KAAKT,MAAMc,aAAaZ,EAAMC,K,+BAGtB,IAAD,OACP,OACE,uBAAMY,SAAUN,KAAKH,aAAcU,UAAWC,IAAEC,KAAhD,UACE,wBAAOC,QAAQ,WAAf,iBAEE,uBACEC,UAAQ,EACRC,GAAG,WACHL,UAAWC,IAAEK,SACbd,KAAK,OACLN,KAAK,OACLqB,YAAY,OACZX,MAAOH,KAAKR,MAAMC,KAClBsB,SAAU,SAAAjB,GAAK,OAAI,EAAKH,aAAaG,EAAO,cAGhD,wBAAOY,QAAQ,aAAf,mBAEE,uBACEE,GAAG,aACHL,UAAWC,IAAEQ,WACbjB,KAAK,MACLN,KAAK,SACLqB,YAAY,SACZX,MAAOH,KAAKR,MAAME,OAClBiB,UAAQ,EACRI,SAAU,SAAAjB,GAAK,OAAI,EAAKH,aAAaG,EAAO,gBAGhD,wBAAQC,KAAK,SAASQ,UAAWC,IAAES,IAAnC,gC,GApDkBC,a,gBCMXC,MARf,YAAoC,IAAZC,EAAW,EAAXA,QACtB,OACE,wBAAQb,UAAWC,IAAES,IAAKI,QAASD,EAAnC,qBCWWE,MAZf,YAAqD,IAA1BC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,gBAC/B,OACE,qBAAIjB,UAAWC,IAAEiB,KAAjB,UACE,oBAAGlB,UAAWC,IAAEkB,KAAhB,UACE,sBAAMnB,UAAWC,IAAEf,KAAnB,SAA0B8B,EAAK9B,OAC/B,sBAAMc,UAAWC,IAAEmB,MAAnB,SAA2BJ,EAAK7B,YAElC,cAAC,EAAD,CAAc0B,QAASI,QCWdI,MAlBf,YAAqD,IAA9BC,EAA6B,EAA7BA,SAAUL,EAAmB,EAAnBA,gBAC/B,OACEK,EAASC,OAAS,GAChB,oBAAIvB,UAAWC,IAAEuB,KAAjB,SACGF,EAASG,KAAI,YAA2B,IAAxBpB,EAAuB,EAAvBA,GAAInB,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OACzB,OACE,cAAC,EAAD,CACE6B,KAAM,CAAE9B,OAAMC,UAEd8B,gBAAiB,kBAAMA,EAAgBZ,KADlCA,S,iBCOJqB,MAhBf,YAAwD,IAAtCC,EAAqC,EAArCA,OAAqC,IAA7BC,sBAA6B,MAAZ,aAAY,EACrD,OACE,qBAAK5B,UAAW6B,IAAOC,UAAvB,SACE,0DAEE,uBACEtC,KAAK,OACLQ,UAAW6B,IAAOE,MAClBnC,MAAO+B,EACPnB,SAAU,SAAAwB,GAAC,OAAIJ,EAAeI,EAAErC,OAAOC,gBCD3CqC,E,kDAMJ,WAAYjD,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAL,eAAkB,EAAKD,OACvB,EAAKkD,WAAa,EAAKA,WAAW7C,KAAhB,gBAClB,EAAK8C,aAAe,EAAKA,aAAa9C,KAAlB,gBACpB,EAAKuC,eAAiB,EAAKA,eAAevC,KAApB,gBACtB,EAAK4B,gBAAkB,EAAKA,gBAAgB5B,KAArB,gBANN,E,gEAUjB,IAAM+C,EAAaC,aAAaC,QAAQ,YACpCF,GACF3C,KAAKC,SAAS,CAAE4B,SAAUiB,KAAKC,MAAMJ,O,yCAItBK,EAAWC,GAAY,IAChCpB,EAAa7B,KAAKR,MAAlBqC,SACJoB,EAAUpB,WAAaA,GACzBe,aAAaM,QAAQ,WAAYJ,KAAKK,UAAUtB,M,oCAItCuB,GAKZ,OAAkB,IAJGpD,KAAKR,MAAlBqC,SACewB,WACrB,qBAAG5D,KAAgB6D,gBAAkBF,EAAQE,cAAcC,Y,iCAKpD9D,EAAMC,GACf,GAAKD,EAAK8D,OAIV,GAAK7D,EAAO6D,OAIZ,GAAIvD,KAAKwD,cAAc/D,GAAO,CAAC,IACrBoC,EAAa7B,KAAKR,MAAlBqC,SACF4B,EAAa,CAAE7C,GAAI8C,cAAOjE,OAAMC,UACtCM,KAAKC,SAAS,CACZ4B,SAAUA,EAAS8B,OAAO,CAACF,IAAaG,MAAK,SAACC,EAAGC,GAC/C,OAAID,EAAEpE,KAAK6D,cAAgBQ,EAAErE,KAAK6D,eAAuB,GACrDO,EAAEpE,KAAK6D,cAAgBQ,EAAErE,KAAK6D,cAAsB,aAK5DS,MAAM,GAAD,OAAItE,EAAJ,iCAdLsE,MAAM,qBAJNA,MAAM,gB,qCAsBK5D,GACbH,KAAKC,SAAS,CACZiC,OAAQ/B,M,sCAIIS,GAAK,IACXiB,EAAa7B,KAAKR,MAAlBqC,SACR7B,KAAKC,SAAS,CACZ4B,SAAUA,EAASK,QAAO,SAAA8B,GAAC,OAAIA,EAAEpD,KAAOA,S,qCAI5B,IAAD,EACgBZ,KAAKR,MAA1BqC,EADK,EACLA,SAAUK,EADL,EACKA,OAClB,OAAOL,EAASK,QAAO,qBAAGzC,KACnB6D,cAAcW,SAAS/B,EAAOoB,oB,+BAI7B,IAAD,EACsBtD,KAAKR,MAA1B0C,EADD,EACCA,OAAQL,EADT,EACSA,SAChB,OACE,sBAAKtB,UAAW6B,IAAOC,UAAvB,UACE,2CACA,cAAC,EAAD,CAAahC,aAAcL,KAAKyC,aAC/BZ,EAASC,OAAS,EACjB,eAAC,EAAD,WACE,cAAC,EAAD,CAAQI,OAAQA,EAAQC,eAAgBnC,KAAKmC,iBAC7C,cAAC,EAAD,CACEN,SAAUK,EAASlC,KAAK0C,eAAiBb,EACzCL,gBAAiBxB,KAAKwB,qBAI1B,8E,GAhGQN,aAAZsB,EACG0B,aAAe,CACpBrC,SAAU,GACVK,OAAQ,IAoGGM,QC3Gf2B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCT1BrF,EAAOC,QAAU,CAAC,KAAO,0BAA0B,MAAQ,2BAA2B,SAAW,uDAAuD,WAAa,yDAAyD,IAAM,4B","file":"static/js/main.9ea722be.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Filter_container__27XqG\",\"input\":\"Filter_input__3qMhe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__35NHB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__29Ch7\",\"block\":\"ContactList_block__3jhsV\",\"item\":\"ContactList_item__9YY3k\",\"name\":\"ContactList_name__2ikhq\",\"phone\":\"ContactList_phone__2M8AO\",\"wrap\":\"ContactList_wrap__3rFoC\",\"btn\":\"ContactList_btn__1LlrM\"};","function Contacts({ children }) {\n  return (\n    <div>\n      <h2>Contacts</h2>\n      {children}\n    </div>\n  );\n}\n\nexport default Contacts;\n","import React, { Component } from 'react';\n\nimport s from './ContactForm.module.css';\n\nclass ContactForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      number: '',\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event, type) {\n    this.setState({\n      [type]: event.target.value,\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const { name, number } = this.state;\n    this.props.onAddContact(name, number);\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit} className={s.form}>\n        <label htmlFor=\"formName\">\n          Name\n          <input\n            required\n            id=\"formName\"\n            className={s.formName}\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"Name\"\n            value={this.state.name}\n            onChange={event => this.handleChange(event, 'name')}\n          />\n        </label>\n        <label htmlFor=\"formNumber\">\n          Number\n          <input\n            id=\"formNumber\"\n            className={s.formNumber}\n            type=\"tel\"\n            name=\"number\"\n            placeholder=\"Number\"\n            value={this.state.number}\n            required\n            onChange={event => this.handleChange(event, 'number')}\n          />\n        </label>\n        <button type=\"submit\" className={s.btn}>\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n","import s from './ContactList.module.scss';\n\nfunction DeleteButton({ handler }) {\n  return (\n    <button className={s.btn} onClick={handler}>\n      &#10008;\n    </button>\n  );\n}\n\nexport default DeleteButton;\n","import DeleteButton from './DeleteButton';\nimport s from './ContactList.module.scss';\n\nfunction ContactListItem({ info, onDeleteHandler }) {\n  return (\n    <li className={s.item}>\n      <p className={s.wrap}>\n        <span className={s.name}>{info.name}</span>\n        <span className={s.phone}>{info.number}</span>\n      </p>\n      <DeleteButton handler={onDeleteHandler} />\n    </li>\n  );\n}\n\nexport default ContactListItem;\n","import ContactListItem from './ContactListItem';\nimport s from './ContactList.module.scss';\n\nfunction ContactList({ contacts, onDeleteHandler }) {\n  return (\n    contacts.length > 0 && (\n      <ul className={s.list}>\n        {contacts.map(({ id, name, number }) => {\n          return (\n            <ContactListItem\n              info={{ name, number }}\n              key={id}\n              onDeleteHandler={() => onDeleteHandler(id)}\n            />\n          );\n        })}\n      </ul>\n    )\n  );\n}\n\nexport default ContactList;\n","import styles from './Filter.module.css';\n\nfunction Filter({ filter, onChangeFilter = () => {} }) {\n  return (\n    <div className={styles.container}>\n      <label>\n        Find Contacts by name\n        <input\n          type=\"text\"\n          className={styles.input}\n          value={filter}\n          onChange={e => onChangeFilter(e.target.value)}\n        />\n      </label>\n    </div>\n  );\n}\n\nexport default Filter;\n","import React, { Component } from 'react';\nimport { v4 as uid } from 'uuid';\n\nimport styles from './App.module.css';\n\nimport Contacts from './components/Contacts/Contacts';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport ContactList from './components/ContactList/ContactList';\nimport Filter from './components/Filter/Filter';\n\nclass App extends Component {\n  static defaultProps = {\n    contacts: [],\n    filter: '',\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = { ...this.props };\n    this.addContact = this.addContact.bind(this);\n    this.filteredList = this.filteredList.bind(this);\n    this.onChangeFilter = this.onChangeFilter.bind(this);\n    this.onDeleteHandler = this.onDeleteHandler.bind(this);\n  }\n\n  componentDidMount() {\n    const DBContacts = localStorage.getItem('contacts');\n    if (DBContacts) {\n      this.setState({ contacts: JSON.parse(DBContacts) });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { contacts } = this.state;\n    if (prevState.contacts !== contacts) {\n      localStorage.setItem('contacts', JSON.stringify(contacts));\n    }\n  }\n\n  nameAvailable(newName) {\n    const { contacts } = this.state;\n    const index = contacts.findIndex(\n      ({ name }) => name.toLowerCase() === newName.toLowerCase().trim(),\n    );\n    return index === -1 ? true : false;\n  }\n\n  addContact(name, number) {\n    if (!name.trim()) {\n      alert(`Wrong name`);\n      return;\n    }\n    if (!number.trim()) {\n      alert(`Wrong number`);\n      return;\n    }\n    if (this.nameAvailable(name)) {\n      const { contacts } = this.state;\n      const newContact = { id: uid(), name, number };\n      this.setState({\n        contacts: contacts.concat([newContact]).sort((a, b) => {\n          if (a.name.toLowerCase() < b.name.toLowerCase()) return -1;\n          if (a.name.toLowerCase() < b.name.toLowerCase()) return 1;\n          return 1;\n        }),\n      });\n    } else {\n      alert(`${name} is already in contacts`);\n    }\n  }\n\n  onChangeFilter(value) {\n    this.setState({\n      filter: value,\n    });\n  }\n\n  onDeleteHandler(id) {\n    const { contacts } = this.state;\n    this.setState({\n      contacts: contacts.filter(i => i.id !== id),\n    });\n  }\n\n  filteredList() {\n    const { contacts, filter } = this.state;\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  }\n\n  render() {\n    const { filter, contacts } = this.state;\n    return (\n      <div className={styles.container}>\n        <h1>Phonebook</h1>\n        <ContactForm onAddContact={this.addContact} />\n        {contacts.length > 0 ? (\n          <Contacts>\n            <Filter filter={filter} onChangeFilter={this.onChangeFilter} />\n            <ContactList\n              contacts={filter ? this.filteredList() : contacts}\n              onDeleteHandler={this.onDeleteHandler}\n            />\n          </Contacts>\n        ) : (\n          <p>Your phonebook is empty at this moment</p>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'normalize.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__EhXOU\",\"input\":\"ContactForm_input__1hKkj\",\"formName\":\"ContactForm_formName__EUbUs ContactForm_input__1hKkj\",\"formNumber\":\"ContactForm_formNumber__1RXGn ContactForm_input__1hKkj\",\"btn\":\"ContactForm_btn__3DQPe\"};"],"sourceRoot":""}